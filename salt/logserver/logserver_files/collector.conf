  input {
      redis {
        host => "127.0.0.1"
        data_type => "pattern_channel"
        key => "logstash*"
        codec => json
    }
  }

  filter {
     grok {
       match => { "path" => "/var/log/pnda/hadoop-yarn/container/%{DATA:applicationId}/%{DATA:containerId}/%{GREEDYDATA:logtype}" }
       remove_tag => [ "_grokparsefailure", "_jsonparsefailure" ]
       add_tag => ["processed"]
     }
     grok {
       exclude_tags => ["processed"]
       match => { "path" => "/var/log/pnda(/hadoop)?/%{DATA:appName}/%{GREEDYDATA:logtype}" }
       remove_tag => [ "_grokparsefailure", "_jsonparsefailure" ]
       add_tag => ["processed"]
     }
     grok {
       exclude_tags => ["processed"]
       match => { "path" => "%{GREEDYDATA}/%{GREEDYDATA:appName}\.log" }
       add_field => { "logtype" => "main" }
       remove_tag => [ "_grokparsefailure", "_jsonparsefailure" ]
       add_tag => ["processed"]
     }
     grok {
       exclude_tags => ["processed"]
       match => { "path" => "%{GREEDYDATA}/%{GREEDYDATA:appName}" }
       add_field => { "logtype" => "main" }
       remove_tag => [ "_grokparsefailure", "_jsonparsefailure" ]
       add_tag => ["processed"]
     }
  }

  output {
       if [applicationId] {
         file { path => "/var/log/pnda/yarn-%{applicationId}.log" message_format => "%{@timestamp} %{host} %{containerId} %{logtype} %{message}" flush_interval => 0 }
       }
       if [appName] {
         file { path => "/var/log/pnda/%{appName}.log" message_format => "%{@timestamp} %{host} %{logtype} %{message}" flush_interval => 0 }
       }
       elasticsearch {
         host => ["localhost"]
       }
  }

